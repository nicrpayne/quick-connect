{"version":3,"sources":["redux/reducers/errors.reducer.js","redux/reducers/user.reducer.js","redux/reducers/loginMode.reducer.js","redux/reducers/allTemplates.reducer.js","redux/reducers/newTemplate.reducer.js","redux/reducers/selectedTemplate.reducer.js","redux/reducers/allGuests.reducer.js","redux/reducers/allHotels.reducer.js","redux/reducers/message.reducer.js","redux/reducers/_root.reducer.js","redux/sagas/login.saga.js","redux/sagas/registration.saga.js","redux/sagas/user.saga.js","redux/sagas/newtemplate.saga.js","redux/sagas/alltemplates.saga.js","redux/sagas/selectedtemplate.saga.js","redux/sagas/allguests.saga.js","redux/sagas/allhotels.saga.js","redux/sagas/message.saga.js","redux/sagas/_root.saga.js","redux/mapStoreToProps.js","components/LoginForm/LoginForm.js","components/LoginPage/LoginPage.js","components/ProtectedRoute/ProtectedRoute.js","components/AboutPage/AboutPage.js","components/RegisterForm/RegisterForm.js","components/RegisterPage/RegisterPage.js","components/Nav/Nav.js","components/UserPage/UserPage.js","components/LogOutButton/LogOutButton.js","components/Header/Header.js","components/NewTemplate/NewTemplate.js","components/NewMessage/NewMessage.js","components/NewGuest/NewGuest.js","components/NewHotel/NewHotel.js","components/App/App.js","index.js"],"names":["combineReducers","loginMessage","state","action","type","registrationMessage","userReducer","payload","loginMode","allTemplatesReducer","newTemplatesReducer","selectedTemplateReducer","allGuestsReducer","allHotelsReducer","messageReducer","rootReducer","errors","user","templates","newTemplate","loginUser","logoutUser","loginSaga","put","config","headers","withCredentials","axios","post","response","status","takeLatest","registerUser","registrationSaga","console","log","fetchUser","userSaga","get","data","addTemplate","newTemplateSaga","getAllTemplates","allTemplatesSaga","selectTemplate","selectedTemplateSaga","details","getGuests","addGuest","allGuestsSaga","getHotels","addHotel","allHotelsSaga","sendMessage","MessageSaga","rootSaga","all","mapStoreToProps","reduxState","store","buttonStyle","backgroundColor","color","position","display","justifyContent","alignItems","alignContent","flexWrap","marginLeft","LoginForm","username","password","login","event","preventDefault","props","dispatch","handleInputChangeFor","propertyName","setState","target","value","className","as","textAlign","Image","src","style","Form","size","Segment","stacked","this","role","Input","fluid","placeholder","name","required","onChange","onClick","Message","href","Component","connect","LoginPage","ComponentToShow","ComponentToProtect","component","authRedirect","otherProps","id","exact","from","path","to","AboutPage","RegisterForm","background","height","margin","backgroundRepeat","backgroundSize","onSubmit","htmlFor","RegisterPage","loginLinkData","text","UserPage","NewTemplate","body","handleClick","a","alert","template","inverted","Button","variant","disabled","toast","configure","NewMessage","newMessage","templateId","guestId","mobile","companyId","roomNumber","loading","currentTime","Date","toLocaleString","handleChangeFor","propertyValue","message","getMobileByGuestId","notify","guestName","map","guest","first_name","room_number","companyName","company","company_name","greeting","currentHour","moment","format","success","getGreeting","getGuestNameById","getCompanyById","getRoomNumberByGuestId","template_name","selected","hidden","last_name","options","autoStart","loop","delay","strings","NewGuest","newGuest","firstName","lastName","email","allowLandLine","showSuccessHelp","showDangerHelp","result","setTimeout","history","push","validate","allowLandline","phone","length","Group","widths","NewHotel","newHotel","company_city","company_timezone","newHuest","hotel","App","render","sagaMiddleware","createSagaMiddleware","middlewareList","createStore","applyMiddleware","run","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8b1abdfb.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\n\nconst loginMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_LOGIN_ERROR':\n      return '';\n    case 'LOGIN_INPUT_ERROR':\n      return 'Enter your username and password!';\n    case 'LOGIN_FAILED':\n      return \"Oops! The username and password didn't match. Try again!\";\n    case 'LOGIN_FAILED_NO_CODE':\n      return 'Oops! Something went wrong! Is the server running?';\n    default:\n      return state;\n  }\n};\n\n\nconst registrationMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_REGISTRATION_ERROR':\n      return '';\n    case 'REGISTRATION_INPUT_ERROR':\n      return 'Choose a username and password!';\n    case 'REGISTRATION_FAILED':\n      return \"Oops! That didn't work. The username might already be taken. Try again!\";\n    default:\n      return state;\n  }\n};\n\nexport default combineReducers({\n  loginMessage,\n  registrationMessage,\n});\n","const userReducer = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return action.payload;\n    case 'UNSET_USER':\n      return {};\n    default:\n      return state;\n  }\n}; \n\nexport default userReducer;\n","const loginMode = (state = 'login', action) => {\n    switch (action.type) {\n      case 'SET_TO_LOGIN_MODE':\n        return 'login';\n      case 'SET_TO_REGISTER_MODE':\n        return 'register';\n      default:\n        return state;\n    }\n  };\n\n  export default loginMode;\n  ","const allTemplatesReducer = (state = [], action) => {\n  switch (action.type) {\n      case 'SET_TEMPLATES':\n        return action.payload;\n      default:\n        return state;\n    };\n  };   \n  \n  export default allTemplatesReducer;\n  ","const newTemplatesReducer = (state = {}, action) => { \n    switch (action.type) {\n        case 'NEW_TEMP_REDUCER':\n          return action.payload;\n        default:\n          return state;\n      };\n    };   \n\n    export default newTemplatesReducer;","const selectedTemplateReducer = (state = {}, action) => { \n    switch (action.type) {\n        case 'SET_SELECTED_TEMPLATE':\n          return action.payload;\n        default:\n          return state;\n      };\n    };   \n    \n\n    export default selectedTemplateReducer;\n    ","const allGuestsReducer = (state = [], action) => {\n    switch (action.type) {\n        case 'SET_ALL_GUESTS':\n          return action.payload;\n        default:\n          return state;\n      };\n    };   \n    \n    export default allGuestsReducer;\n    ","const allHotelsReducer = (state = [], action) => { \n    switch (action.type) {\n        case 'SET_ALL_HOTELS':\n          return action.payload;\n        default:\n          return state;\n      };\n    };   \n    \n    export default allHotelsReducer;\n    ","const messageReducer = (state = [], action) => {\n  switch (action.type) {\n\n    case 'MESSAGE_SUCCESS':\n      return action.payload;\n      \n    default:\n      return state;\n      \n  }\n};\n\nexport default messageReducer;\n","import { combineReducers } from 'redux';\nimport errors from './errors.reducer';\nimport user from './user.reducer';\nimport loginMode from './loginMode.reducer';\nimport templates from './allTemplates.reducer';\nimport newTemplate from './newTemplate.reducer';\nimport selectedTemplateReducer from './selectedTemplate.reducer';\nimport allGuestsReducer from './allGuests.reducer';\nimport allHotelsReducer from './allHotels.reducer';\nimport messageReducer from './message.reducer';\n\n\nconst rootReducer = combineReducers({\n  errors,\n  loginMode, \n  user,\n  templates,\n  newTemplate,\n  selectedTemplateReducer,\n  allGuestsReducer,\n  allHotelsReducer,\n  messageReducer\n});\n\nexport default rootReducer;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction* loginUser(action) {\n  try {\n    yield put({ type: 'CLEAR_LOGIN_ERROR' });\n\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    yield axios.post('/api/user/login', action.payload, config);\n\n    yield put({ type: 'FETCH_USER' });\n\n  } catch (error) {\n\n    if (error.response.status === 401) {\n\n      yield put({ type: 'LOGIN_FAILED' });\n      \n    } else {\n\n      yield put({ type: 'LOGIN_FAILED_NO_CODE' });\n    }\n  }\n}\n\n\nfunction* logoutUser(action) {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n    yield axios.post('/api/user/logout', config);\n\n    yield put({ type: 'UNSET_USER' });\n\n  } catch (error) {\n  }\n}\n\nfunction* loginSaga() {\n  yield takeLatest('LOGIN', loginUser);\n  yield takeLatest('LOGOUT', logoutUser);\n}\n\nexport default loginSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction* registerUser(action) {\n  try {\n\n    yield put({ type: 'CLEAR_REGISTRATION_ERROR' });\n\n    yield axios.post('/api/user/register', action.payload);\n\n    yield put({ type: 'LOGIN', payload: action.payload });\n\n    yield put({ type: 'SET_TO_LOGIN_MODE' });\n  } catch (error) {\n    console.log('Error with user registration:', error);\n    yield put({ type: 'REGISTRATION_FAILED' });\n  }\n}\n\nfunction* registrationSaga() {\n  yield takeLatest('REGISTER', registerUser);\n}\n\nexport default registrationSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\nfunction* fetchUser() {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n    const response = yield axios.get('/api/user', config);\n    yield put({ type: 'SET_USER', payload: response.data });\n  } catch (error) {\n    console.log('User get request failed', error);\n  }\n}\n\nfunction* userSaga() {\n  yield takeLatest('FETCH_USER', fetchUser);\n}\n\nexport default userSaga;\n","import { takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n\nfunction* addTemplate(action) {\n  try {\n    yield axios.post('/api/newTemplate', action.payload);\n\n  } catch (error) {\n    console.log('Error adding New Template:', error);\n  }\n}\n\n\nfunction* newTemplateSaga() {\n  yield takeLatest('POST_NEW_TEMPLATE', addTemplate);\n}\n\nexport default newTemplateSaga;","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n\nfunction* getAllTemplates() {\n  try {\n    const response = yield axios.get('/api/allTemplates');\n    yield put({ type: 'SET_TEMPLATES', payload: response.data });\n  } catch (error) {\n  }\n}\n\nfunction* allTemplatesSaga() {\n  yield takeLatest('GET_TEMPLATES', getAllTemplates);\n  yield takeLatest('GET_TEMPLATES_GUESTS_HOTELS', getAllTemplates);\n}\n\nexport default allTemplatesSaga;","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n\nfunction* selectTemplate(action) {\n    try {\n        const details = yield axios.get(`'/api/selectedTemplate/${action.payload}`);\n        yield put({ type: \"SET_SELECTED_TEMPLATE\", payload: details.data[0] });\n    } catch (error) {\n        console.log('Error in selectTemplate', error);\n    }\n}\n\n\nfunction* selectedTemplateSaga() {\n  yield takeLatest(\"SELECTED_TEMPLATE\", selectTemplate);\n}\n\nexport default selectedTemplateSaga;","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n\nfunction* getGuests() {\n    try {\n        const response = yield axios.get('/api/allGuests/');\n        yield put({ type: 'SET_ALL_GUESTS', payload: response.data });\n    } catch (error) {\n    }\n}\n\nfunction* addGuest(action) {\n    try {  \n        yield axios.post('/api/allGuests/', action.payload)\n    }   catch (error) {\n    }\n}\n\n\nfunction* allGuestsSaga() {\n  yield takeLatest('GET_GUESTS', getGuests);\n  yield takeLatest('POST_NEW_GUEST', addGuest);\n  yield takeLatest('GET_TEMPLATES_GUESTS_HOTELS', getGuests);\n}\n\nexport default allGuestsSaga;","import { put, takeLatest } from \"redux-saga/effects\";\nimport axios from \"axios\";\n\nfunction* getHotels() {\n  try {\n    const response = yield axios.get(\"/api/allHotels/\");\n\n    yield put({ type: \"SET_ALL_HOTELS\", payload: response.data });\n  } catch (error) {\n  }\n}\n\nfunction* addHotel(action) {\n  try {\n    yield put({ type: \"SET_LOADING_TRUE\" });\n\n    const response = yield axios.post(\"/api/allHotels/\", action.payload);\n  } catch (error) {\n  }\n}\n\nfunction* allHotelsSaga() {\n  yield takeLatest(\"GET_HOTELS\", getHotels);\n  yield takeLatest(\"GET_TEMPLATES_GUESTS_HOTELS\", getHotels);\n  yield takeLatest(\"POST_NEW_HOTEL\", addHotel);\n}\n\nexport default allHotelsSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction* sendMessage(action) {\n    try {\n       const response = yield axios.post('/api/message/', action.payload);     \n       yield put({ type: 'MESSAGE_SUCCESS', payload: response.data});\n      } catch (error) {\n        console.log('Error sending message:', error);\n        return false;\n      }\n}\n\nfunction* MessageSaga() {\n  yield takeLatest(\"NEW_MESSAGE\", sendMessage);\n}\n\nexport default MessageSaga;\n\n\n","import { all } from 'redux-saga/effects';\nimport loginSaga from './login.saga';\nimport registrationSaga from './registration.saga';\nimport userSaga from './user.saga';\nimport newTemplateSaga from './newtemplate.saga';\nimport allTemplatesSaga from './alltemplates.saga';\nimport selectedTemplateSaga from './selectedtemplate.saga';\nimport allGuestsSaga from './allguests.saga';\nimport allHotelsSaga from './allhotels.saga';\nimport MessageSaga from './message.saga';\n\n\nexport default function* rootSaga() {\n  yield all([\n    loginSaga(), \n    registrationSaga(),\n    userSaga(),\n    newTemplateSaga(),\n    allTemplatesSaga(),\n    selectedTemplateSaga(),\n    allGuestsSaga(),\n    allHotelsSaga(),\n    MessageSaga()\n  ]);\n}\n","const mapStoreToProps = (reduxState) => {\n  return {\n    store: reduxState,\n  };\n};\n\nexport default mapStoreToProps;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport mapStoreToProps from \"../../redux/mapStoreToProps\";\nimport { Form, Image, Segment, Message } from \"semantic-ui-react\";\n\nimport \"./LoginForm.css\";\n\nconst buttonStyle = {\n  backgroundColor: \"#c0165s\",\n  color: \"white\",\n  position: \"relative\",\n  display: \"flex !important\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  alignContent: \"center\",\n  flexWrap: \"wrap\",\n  marginLeft: \"5.75rem\",\n};\n\nconst colors = [\"#e967a5\", \"#1d949c\", \"#d31459\", \"#92196c\", \"#c0165f\"];\nclass LoginForm extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n  };\n\n  login = (event) => {\n    event.preventDefault();\n\n    if (this.state.username && this.state.password) {\n      this.props.dispatch({\n        type: \"LOGIN\",\n        payload: {\n          username: this.state.username,\n          password: this.state.password,\n        },\n      });\n    } else {\n      this.props.dispatch({ type: \"LOGIN_INPUT_ERROR\" });\n    } \n  }; // end login\n\n  handleInputChangeFor = (propertyName) => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  };\n\n  render() {\n    \n    return (\n      \n      <>\n        <div className=\"log-in-page\">\n          <div className=\"login-form-container\">\n            <div className=\"login-section\">\n              <div className=\"login-form\">\n                <div>\n                  <header className=\"bell-container\" as=\"h2\" textAlign=\"center\">\n                    <Image\n                      className=\"check-in-bell\"\n                      src=\"/Assets/WhiteBell.png\"\n                    />\n                    <h1 style={{ color: \"#c0165f\" }} className=\"welcome-text\">\n                      welcome! check-in\n                    </h1>\n                  </header>\n\n                  <Form size=\"large\">\n                    <Segment stacked>\n                      {this.props.store.errors.loginMessage && (\n                        <h3 className=\"alert\" role=\"alert\">\n                          {this.props.store.errors.loginMessage}\n                        </h3>\n                      )}\n                      <Form.Input\n                        fluid\n                        placeholder=\"username\"\n                        type=\"text\"\n                        name=\"username\"\n                        required\n                        value={this.state.username}\n                        onChange={this.handleInputChangeFor(\"username\")}\n                      />\n                      <Form.Input\n                        fluid\n                        placeholder=\"password\"\n                        type=\"password\"\n                        required\n                        value={this.state.password}\n                        onChange={this.handleInputChangeFor(\"password\")}\n                      />\n\n                      <button\n                        onClick={(event) => this.login(event)}\n                        fluid\n                        size=\"large\"\n                        type=\"submit\"\n                        name=\"submit\"\n                        style={buttonStyle}\n                        className=\"ui button\"\n                        value=\"Log In\"\n                      >\n                        login\n                      </button>\n                    </Segment>\n                  </Form>\n\n                  <Message style={{ textAlign: \"center\" }}>\n                    new to us?{\" \"}\n                    <a style={{ color: \"#e06da3\" }} href=\"#/registration\">\n                      sign up\n                    </a>\n                  </Message>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className=\"photo-section\">\n            <img className=\"photo\" src=\"/Assets/hotel-image.jpeg\"></img>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(LoginForm);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport mapStoreToProps from \"../../redux/mapStoreToProps\";\nimport LoginForm from \"../LoginForm/LoginForm\";\n\nclass LoginPage extends Component {\n  render() {\n    return (\n      <div>\n        <LoginForm />\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(LoginPage);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport LoginPage from \"../LoginPage/LoginPage\";\nimport mapStoreToProps from \"../../redux/mapStoreToProps\";\n\nconst ProtectedRoute = (props) => {\n  const {\n    component: ComponentToProtect,\n    authRedirect,\n    store,\n    ...otherProps\n  } = props;\n\n  let ComponentToShow;\n\n  if (store.user.id) {\n    ComponentToShow = ComponentToProtect;\n  } else {\n    ComponentToShow = LoginPage;\n  }\n\n  if (store.user.id && authRedirect != null) {\n    return <Redirect exact from={otherProps.path} to={authRedirect} />;\n  } else if (!store.user.id && authRedirect != null) {\n    ComponentToShow = ComponentToProtect;\n  }\n\n  return <Route {...otherProps} component={ComponentToShow} />;\n};\n\nexport default connect(mapStoreToProps)(ProtectedRoute);\n","import React from 'react';\n\nconst AboutPage = () => (\n  <div className=\"container\">\n    <div>\n      <p>About</p>\n    </div>\n  </div>\n);\n\nexport default AboutPage;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport mapStoreToProps from \"../../redux/mapStoreToProps\";\n\nconst buttonStyle = {\n  backgroundColor: \"#c0165s\",\n  color: \"white\",\n  position: \"relative\",\n  display: \"flex !important\",\n  justifyContent: \"center\",\n  alignItems: \"center\",\n  alignContent: \"center\",\n  flexWrap: \"wrap\",\n  marginLeft: \"5.75rem\",\n};\nclass RegisterForm extends Component {\n  state = {\n    username: \"\",\n    password: \"\",\n  };\n\n  registerUser = (event) => {\n    event.preventDefault();\n\n    this.props.dispatch({\n      type: \"REGISTER\",\n      payload: {\n        username: this.state.username,\n        password: this.state.password,\n      },\n    });\n  }; \n\n  handleInputChangeFor = (propertyName) => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  };\n\n  render() {\n    const imageStyle = {\n      background: \"url(/Assets/hotelUnsplashTest.jpeg)\",\n      display: \"flex !important\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      alignContent: \"center\",\n      flexWrap: \"wrap\",\n      height: \"100vh\",\n      margin: \"0\",\n      backgroundRepeat: \"no-repeat\",\n      backgroundSize: \"cover\",\n    };\n\n    return (\n      <div className=\"register-ui-grid\" style={imageStyle}>\n        <form className=\"formPanel\" onSubmit={this.registerUser}>\n          <h2>Register Here</h2>\n          {this.props.store.errors.registrationMessage && (\n            <h3 className=\"alert\" role=\"alert\">\n              {this.props.store.errors.registrationMessage}\n            </h3>\n          )}\n\n          <div>\n            <label htmlFor=\"username\">\n              Username:\n              <input\n                className=\"register-input\"\n                type=\"text\"\n                name=\"username\"\n                value={this.state.username}\n                required\n                onChange={this.handleInputChangeFor(\"username\")}\n              />\n            </label>\n          </div>\n          <div>\n            <label htmlFor=\"password\">\n              Password:\n              <input\n                className=\"register-input\"\n                type=\"password\"\n                name=\"password\"\n                value={this.state.password}\n                required\n                onChange={this.handleInputChangeFor(\"password\")}\n              />\n            </label>\n          </div>\n          <div>\n            <input\n              type=\"submit\"\n              name=\"submit\"\n              value=\"Register\"\n              fluid\n              size=\"large\"\n              type=\"submit\"\n              name=\"submit\"\n              style={buttonStyle}\n              className=\"ui button\"\n            />\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(RegisterForm);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport mapStoreToProps from '../../redux/mapStoreToProps';\n\n\nimport RegisterForm from '../RegisterForm/RegisterForm';\n\nclass RegisterPage extends Component {\n  state = {\n    username: '',\n    password: '',\n  };\n\n  render() {\n    return (\n      <div>\n        <RegisterForm />\n        <center>\n        </center>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(RegisterPage);\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport mapStoreToProps from \"../../redux/mapStoreToProps\";\nimport \"./Nav.css\";\n\nconst Nav = (props) => {\n  let loginLinkData = {\n    path: \"/login\",\n    text: \"Login / Register\",\n  };\n\n  if (props.store.user.id != null) {\n    loginLinkData.path = \"/home\";\n    loginLinkData.text = \"Home\";\n  }\n\n  return (\n    <>\n      <div className=\"inverted-vertical-container\">\n        <div className=\"ui inverted vertical menu\">\n          <div>\n            <div>\n              <Link className=\"item\" to={loginLinkData.path}>\n                {loginLinkData.text}\n              </Link>\n              {props.store.user.id && (\n                <>\n                  <Link className=\"item\" to=\"/newguest\">\n                    Add a Guest\n                  </Link>\n                  <Link className=\"item\" to=\"/newhotel\">\n                    Add a Hotel\n                  </Link>\n                  <Link className=\"item\" to=\"/newtemplate\">\n                    Add a Template\n                  </Link>\n                </>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default connect(mapStoreToProps)(Nav);","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport mapStoreToProps from \"../../redux/mapStoreToProps\";\n\nclass UserPage extends Component {\n  render() {\n    return (\n      <>\n        <div>\n          <p>{this.props.store.user.username}</p>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(UserPage);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nconst LogOutButton = (props) => (\n  <span\n    // This button shows up in multiple locations and is styled differently\n    // because it's styled differently depending on where it is used, the className\n    // is passed to it from it's parents through React props\n    className={props.className}\n    onClick={() => props.dispatch({ type: 'LOGOUT' })}\n  >\n    Log Out\n  </span>\n);\n\n// This component doesn't need 'mapStateToProps'\n// because it doesn't care what the current state is.\n// No matter what the redux state is, this button will always be a log out button\n// this component still needs 'connect' though, because it is going to dispatch a redux action\nexport default connect()(LogOutButton);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport mapStoreToProps from \"../../redux/mapStoreToProps\";\nimport UserPageName from \"../UserPage/UserPage\";\nimport \"./Header.css\";\nimport LogOutButton from \"../LogOutButton/LogOutButton\";\n\nfunction Header() {\n  return (\n    <div className=\"header-container\">\n      <div className=\"ui top inverted attached menu\">\n        <img\n          src=\"/Assets/whiteLogoNoBackground.png\"\n          className=\"ui medium image\"\n          href=\"#/home\"\n        ></img>\n        {/* <div className=\"ui-vertical-divider-container\">\n        <div className=\"ui vertical divider\"></div>\n        </div> */}\n        <div className=\"container-item-link\">\n          {/* <span style={{float: 'right'}}className=\"item link grey\" >Log Out</span> */}\n          {/* style={{marginRight: \"1rem;\"}} */}\n          {/* <div><h1 id=\"welcome\">{this.props.store.user.username}</h1></div> */}\n\n          <LogOutButton className=\"item link grey\" />\n        </div>\n      </div>\n      <div className=\"username-styling\">\n        <UserPageName />\n      </div>\n    </div>\n  );\n}\n\nexport default connect(mapStoreToProps)(Header);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport mapStoreToProps from \"../../redux/mapStoreToProps\";\nimport Nav from \"../Nav/Nav\";\nimport Header from \"../Header/Header\";\nimport { Button, Form, Segment, } from \"semantic-ui-react\";\nimport 'react-toastify/dist/ReactToastify.css'\nclass NewTemplate extends Component {\n  state = {\n    newTemplate: {\n      name: \"\",\n      body: \"\",\n    },\n  };\n\n  async componentDidMount() {\n    this.props.dispatch({\n      type: \"GET_TEMPLATES\",\n    });\n  }\n\n  handleInputChangeFor = (event, propertyName) => {\n    this.setState({\n      newTemplate: {\n        ...this.state.newTemplate,\n        [propertyName]: event.target.value,\n      },\n    });\n  };\n\n  handleClick = async (event) => {\n    event.preventDefault();\n    try {\n      await this.props.dispatch({\n        type: \"POST_NEW_TEMPLATE\",\n        payload: this.state.newTemplate,\n      });\n      alert(\"New Template Added!\");\n\n    } catch {}\n  };\n\n  render() {\n    let template = this.state.newTemplate;\n\n    return (\n      <>\n        <Header />\n        <Nav />\n        <div className=\"ui grid\">\n          <div className=\"row\">\n            <div className=\"ui fluid column\">\n              <div className=\"title icon container\">\n                <h2 className=\"ui center aligned header\">\n                  <img src=\"/Assets/checklist.png\" className=\"checklist\" />\n                  Adding your own customized template will be coming soon!          \n                </h2>\n              </div>\n            </div>\n          </div>\n\n          <div>\n            <Segment inverted>\n              <Form inverted>\n            <Form.Input\n              type=\"text\"\n              name=\"templateName\"\n              placeholder=\"New Template Name\"\n              value={template.name}\n              onChange={(event) => this.handleInputChangeFor(event, \"name\")}\n            />\n            <Form.Input\n              type=\"text\"\n              name=\"body\"\n              placeholder=\"New Template Message\"\n              value={template.body}\n              onChange={(event) => this.handleInputChangeFor(event, \"body\")}\n            />\n            \n            <Button\n              onClick={this.handleClick}\n              size={\"large\"}\n              variant={\"outlined\"}\n              disabled={!template.name|| !template.body}\n            >\n              Add\n            </Button>\n            </Form>\n            </Segment>\n          </div> \n        </div>\n      </>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(NewTemplate);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport mapStoreToProps from \"../../redux/mapStoreToProps\";\nimport Typewriter from \"typewriter-effect\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n// import phone from \"phone\";\n\nimport moment from \"moment\";\nimport Nav from \"../Nav/Nav\";\nimport Header from \"../Header/Header\";\n\nimport \"semantic-ui-css/semantic.min.css\";\n\nimport \"../App/App.css\";\n\ntoast.configure();\nclass NewMessage extends Component {\n  state = {\n    newMessage: {\n      templateId: \"\",\n      guestId: \"\",\n      mobile: \"\",\n      companyId: \"\",\n      roomNumber: \"\",\n      loading: false,\n    },\n    currentTime: new Date().toLocaleString(),\n  };\n\n  async componentDidMount() {\n    this.props.dispatch({ type: \"GET_TEMPLATES_GUESTS_HOTELS\" });\n  }\n\n  handleChangeFor = (event, propertyValue) => {\n    this.setState({\n      newMessage: {\n        ...this.state.newMessage,\n        [propertyValue]: event.target.value,\n      },\n    });\n  };\n\n  handleClick = async (event) => {\n    event.preventDefault();\n    try {\n      await this.props.dispatch({\n        type: \"NEW_MESSAGE\",\n        payload: {\n          message: this.newMessage(),\n          mobile: this.getMobileByGuestId(this.state.newMessage.guestId),\n        },\n      });\n      this.notify();\n      this.setState({\n        newMessage: {\n          templateId: \"\",\n          guestId: \"\",\n          mobile: \"\",\n          companyId: \"\",\n          roomNumber: \"\",\n          loading: false,\n        },\n      });\n    } catch {}\n  };\n\n  getGuestNameById(id) {\n    let guestName = \"\";\n    this.props.store.allGuestsReducer.map((guest) => {\n      if (guest.id == id) {\n        guestName = guest.first_name;\n      }\n    });\n    return guestName;\n  }\n\n  getRoomNumberByGuestId(id) {\n    let roomNumber = \"\";\n    this.props.store.allGuestsReducer.map((guest) => {\n      if (guest.id == id) {\n        roomNumber = guest.room_number;\n      }\n    });\n    return roomNumber;\n  }\n\n  getMobileByGuestId(id) {\n    let mobile = \"\";\n    this.props.store.allGuestsReducer.map((guest) => {\n      if (guest.id == id) {\n        mobile = guest.mobile;\n      }\n    });\n    return mobile;\n  }\n\n  getCompanyById(id) {\n    let companyName = \"\";\n    this.props.store.allHotelsReducer.map((company) => {\n      if (company.id == id) {\n        companyName = \" \" + company.company_name;\n      }\n    });\n    return companyName;\n  }\n\n  getGreeting() {\n    const currentHour = moment(this.state.currentTime).format(\"H\");\n\n    let greeting;\n    if ((currentHour >= 0 && currentHour <= 3) || currentHour >= 18) {\n      greeting = \"Good evening\";\n    } else if (currentHour >= 4 && currentHour <= 11) {\n      greeting = \"Good morning\";\n    } else if (currentHour >= 12 && currentHour <= 17) {\n      greeting = \"Good afternoon\";\n    }\n    return greeting;\n  }\n  notify() {\n    return toast.success(\"text message sent!\");\n  }\n\n  newMessage(guestId, companyId, roomNumber) {\n    return `${this.getGreeting()} ${this.getGuestNameById(\n      this.state.newMessage.guestId\n    )}, and welcome to${this.getCompanyById(\n      this.state.newMessage.companyId\n    )}! Room number ${this.getRoomNumberByGuestId(\n      this.state.newMessage.guestId\n    )} is now ready you. Enjoy your stay, and let us know if you need anything.`;\n  }\n\n  render() {\n    const newMessage = this.state.newMessage;\n\n    return (\n      <>\n        <Header />\n        <Nav />\n        <div className=\"ui grid\">\n          <div className=\"row\">\n            <div className=\"ui fluid column\">\n              <div className=\"title icon container\">\n                <h2 className=\"ui center aligned header\">\n                  <img src=\"/Assets/checklist.png\" className=\"checklist\" />\n                  Craft a personal, unforgettable guest experience in three\n                  steps\n                </h2>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"three column row\">\n            <div className=\"four wide column\">\n              <div className=\"card-content\">\n                <div className=\"step-text\">step 1.</div>\n                <div className=\"ui card\">\n                  <select\n                    className=\"ui selection dropdown\"\n                    value={newMessage.templateId}\n                    onChange={(event) =>\n                      this.handleChangeFor(event, \"templateId\")\n                    }\n                  >\n                    {this.props.store.templates.map((template) => (\n                      <option key={template.id} value={template.id}>\n                        {template.template_name}\n                      </option>\n                    ))}\n                    <option value=\"\" disabled selected hidden>\n                      template\n                    </option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\"vl\"></div>\n\n            <div className=\"four wide column\">\n              <div className=\"card-content\">\n                <div className=\"step-text\">step 2.</div>\n                <div className=\"ui card\">\n                  <select\n                    name=\"guest name\"\n                    className=\"ui selection dropdown\"\n                    value={newMessage.guestId}\n                    onChange={(event) => this.handleChangeFor(event, \"guestId\")}\n                  >\n                    {this.props.store.allGuestsReducer.map((guest) => (\n                      <option key={guest.id} value={guest.id}>\n                        {guest.first_name} {guest.last_name}\n                      </option>\n                    ))}\n                    <option value=\"\" disabled selected hidden>\n                      guest name\n                    </option>\n                  </select>\n                </div>\n              </div>\n            </div>\n            <div className=\"vl2\"></div>\n\n            <div className=\"four wide column\">\n              <div className=\"card-content\">\n                <div className=\"step-text\">step 3.</div>\n                <div className=\"ui card\">\n                  <select\n                    className=\"ui dropdown selection\"\n                    value={newMessage.companyId}\n                    onChange={(event) =>\n                      this.handleChangeFor(event, \"companyId\")\n                    }\n                  >\n                    {this.props.store.allHotelsReducer.map((company) => (\n                      <option key={company.id} value={company.id}>\n                        {company.company_name}\n                      </option>\n                    ))}\n                    <option value=\"\" disabled selected hidden>\n                      hotel\n                    </option>\n                  </select>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"one column row\">\n            <div className=\"column\">\n              <div className=\"message-display\">\n                <div className=\"message-text\">\n                  <Typewriter\n                    options={{\n                      autoStart: true,\n                      loop: true,\n                      delay: 30,\n                      strings: [\n                        `${this.getGreeting()} <strong>${this.getGuestNameById(\n                          this.state.newMessage.guestId\n                        )}</strong>,\n                      and welcome to <strong>${this.getCompanyById(\n                        this.state.newMessage.companyId\n                      )}</strong>.\n                      Room number <strong>${this.getRoomNumberByGuestId(\n                        this.state.newMessage.guestId\n                      )}</strong> is now ready for you.\n                      Enjoy your stay, and let us know if you need anything.`,\n                      ],\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"one column row\">\n            <div className=\"column\">\n              <button\n                id=\"open\"\n                className=\"ui button\"\n                disabled={\n                  !newMessage.guestId ||\n                  !newMessage.companyId ||\n                  !newMessage.templateId ||\n                  this.state.newMessage.loading\n                }\n                onClick={this.handleClick}\n              >\n                Send Text Message\n              </button>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(NewMessage);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport mapStoreToProps from \"../../redux/mapStoreToProps\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport phone from \"phone\";\nimport Nav from \"../Nav/Nav\";\nimport Header from \"../Header/Header\";\nimport { Button, Form, Segment } from \"semantic-ui-react\";\n\nclass NewGuest extends Component {\n  state = {\n    newGuest: {\n      firstName: \"\",\n      lastName: \"\",\n      mobile: \"\",\n      email: \"\",\n      companyId: \"\",\n    },\n    allowLandLine: false,\n    showSuccessHelp: false,\n    showDangerHelp: false,\n    result: [],\n    mobile: \"\"\n  };\n\n \n\n  async componentDidMount() {\n    this.props.dispatch({\n      type: \"GET_TEMPLATES_GUESTS_HOTELS\",\n    });\n    this.validate();\n  }\n\n  handleInputChangeFor = (event, propertyName) => {\n    this.setState({\n      newGuest: {\n        ...this.state.newGuest,\n        [propertyName]: event.target.value,\n      },\n    });\n    \n  };\n\n  validate() {\n    const { mobile, allowLandline } = this.state;\n    const result = phone(mobile, \"\", allowLandline);\n    if (result.length) {\n      this.setState({\n        result,\n        showDangerHelp: false,\n        showSuccessHelp: true,\n      });\n    } else {\n      this.setState({\n        result,\n        showDangerHelp: true,\n        showSuccessHelp: false,\n      });\n    }\n  }\n\n  handleClick = async (event) => {\n    event.preventDefault();\n    try {\n      await this.props.dispatch({\n        type: \"POST_NEW_GUEST\",\n        payload: this.state.newGuest,\n      });\n      this.notify();\n      this.setState({\n        newGuest: {\n          firstName: \"\",\n          lastName: \"\",\n          mobile: \"\",\n          email: \"\",\n          companyId: \"\",\n        },\n      });\n      setTimeout(() => {\n        this.props.history.push(\"/home\");\n      }, 3500);\n    } catch {}\n  };\n  notify() {\n    return toast.success(\"new guest added!\");\n  }\n\n\n  render() {\n    let guest = this.state.newGuest;\n\n    const showSuccessHelp = this.state.showSuccessHelp\n    const showDangerHelp = this.state.showDangerHelp\n    const phoneInput = this.state.newGuest.mobile\n    const result = this.state.result\n\n\n    return (\n      <>\n        <Header />\n        <Nav />\n        <div className=\"ui grid\">\n          <div className=\"row\">\n            <div className=\"ui fluid column\">\n              <div className=\"title icon container\">\n                <h2 className=\"ui center aligned header\">\n                  <img src=\"/Assets/checklist.png\" className=\"checklist\" />\n                  Add a new Guest to connect with below\n                </h2>\n              </div>\n            </div>\n          </div>\n\n          <div>\n            <Segment inverted>\n              <Form inverted>\n                <Form.Group widths=\"equal\">\n                  <Form.Input\n                    type=\"text\"\n                    name=\"guestFirstName\"\n                    placeholder=\"First Name\"\n                    value={guest.first_name}\n                    onChange={(event) =>\n                      this.handleInputChangeFor(event, \"firstName\")\n                    }\n                  />\n                  <Form.Input\n                    type=\"text\"\n                    name=\"guestLastName\"\n                    placeholder=\"Last name\"\n                    value={guest.last_name}\n                    onChange={(event) =>\n                      this.handleInputChangeFor(event, \"lastName\")\n                    }\n                  />\n                  <Form.Input\n                    id=\"mobile\"\n                    className={`input ${\n                      showSuccessHelp ? \"is-success\" : \"is-danger\"\n                    }`}\n                    type=\"text\"\n                    name=\"body\"\n                    placeholder=\"Mobile\"\n                    value={guest.mobile}\n                    onChange={(event) =>\n                      this.handleInputChangeFor(event, \"mobile\")\n                    }\n                  />\n                  \n                  <Form.Input\n                    type=\"text\"\n                    name=\"guestEmail\"\n                    placeholder=\"Email\"\n                    value={guest.email}\n                    onChange={(event) =>\n                      this.handleInputChangeFor(event, \"email\")\n                    }\n                  />\n                </Form.Group>\n                  <p> *Please format mobile number with \"+\", country code, 10 digit number (+11234567890)</p>\n                <select\n                  className=\"guest-ui-dropdown-selection\"\n                  value={guest.companyId}\n                  onChange={(event) =>\n                    this.handleInputChangeFor(event, \"companyId\")\n                  }\n                >\n                  {this.props.store.allHotelsReducer.map((company) => (\n                    <option key={company.id} value={company.id}>\n                      {company.company_name}, {company.id}\n                    </option>\n                  ))}\n                  <option value=\"\" disabled selected hidden>\n                    Select Hotel\n                  </option>\n                </select>\n\n                <Button\n                  disabled={\n                    !guest.firstName ||\n                    !guest.lastName ||\n                    !guest.mobile ||\n                    !guest.email ||\n                    !guest.companyId\n                  }\n                  className=\"guest-button\"\n                  onClick={this.handleClick}\n                  size={\"large\"}\n                  variant={\"outlined\"}\n                >\n                  Add\n                </Button>\n                <div></div>\n              </Form>\n            </Segment>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(NewGuest);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport mapStoreToProps from \"../../redux/mapStoreToProps\";\nimport Nav from \"../Nav/Nav\";\nimport Header from \"../Header/Header\";\nimport { Button, Form, Segment } from \"semantic-ui-react\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nclass NewHotel extends Component {\n  state = {\n    newHotel: {\n      company_name: \"\",\n      company_city: \"\",\n      company_timezone: \"\",\n    },\n  };\n\n  async componentDidMount() {\n    this.props.dispatch({\n      type: \"GET_HOTELS\",\n    });\n  }\n\n  handleInputChangeFor = (event, propertyName) => {\n    this.setState({\n      newHotel: {\n        ...this.state.newHotel,\n        [propertyName]: event.target.value,\n      },\n    });\n  };\n\n  handleClick = async (event) => {\n    event.preventDefault();\n    try {\n      await this.props.dispatch({\n        type: \"POST_NEW_HOTEL\",\n        payload: this.state.newHotel,\n      });\n      this.notify();\n      this.setState({\n        newHuest: {\n          company_name: \"\",\n          company_city: \"\",\n          company_timezone: \"\"\n        },\n      });\n      setTimeout(() => {\n        this.props.history.push(\"/home\");\n      }, 3500);\n    } catch {}\n  };\n  notify() {\n    return toast.success(\"new hotel added!\");\n  }\n\n  render() {\n    let hotel = this.state.newHotel;\n\n    return (\n      <>\n        <Header />\n        <Nav />\n        <div className=\"ui grid\">\n          <div className=\"row\">\n            <div className=\"ui fluid column\">\n              <div className=\"title icon container\">\n                <h2 className=\"ui center aligned header\">\n                  <img src=\"/Assets/checklist.png\" className=\"checklist\" />\n                  Add a new hotel for assignment to new added guests\n                </h2>\n              </div>\n            </div>\n          </div>\n\n          <div>\n            <Segment inverted>\n              <Form inverted>\n                <Form.Input\n                  name=\"company_name\"\n                  placeholder=\"Hotel Name\"\n                  // label=\"Hotel Name\"\n                  value={hotel.company_name}\n                  onChange={(event) =>\n                    this.handleInputChangeFor(event, \"company_name\")\n                  }\n                />\n                <Form.Input\n                  type=\"text\"\n                  name=\"company_address\"\n                  placeholder=\"Hotel City\"\n                  value={hotel.company_city}\n                  onChange={(event) =>\n                    this.handleInputChangeFor(event, \"company_city\")\n                  }\n                />\n                <Form.Input\n                  type=\"text\"\n                  name=\"company_timezone\"\n                  placeholder=\"Timezone\"\n                  value={hotel.company_timezone}\n                  onChange={(event) =>\n                    this.handleInputChangeFor(event, \"company_timezone\")\n                  }\n                />\n                <Button\n                  disabled={\n                    !hotel.company_name ||\n                    !hotel.company_city ||\n                    !hotel.company_timezone\n                  }\n                  className=\"hotel-button\"\n                  onClick={this.handleClick}\n                  size={\"large\"}\n                  variant={\"outlined\"}\n                >\n                  Add\n                </Button>\n              </Form>\n            </Segment>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default connect(mapStoreToProps)(NewHotel);\n","import React, { Component } from \"react\";\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport ProtectedRoute from \"../ProtectedRoute/ProtectedRoute\";\n\nimport AboutPage from \"../AboutPage/AboutPage\";\nimport LoginPage from \"../LoginPage/LoginPage\";\nimport RegisterPage from \"../RegisterPage/RegisterPage\";\nimport NewTemplate from \"../NewTemplate/NewTemplate\";\nimport NewMessage from \"../NewMessage/NewMessage\";\nimport NewGuest from \"../NewGuest/NewGuest\";\nimport NewHotel from \"../NewHotel/NewHotel\";\n\nimport './App.css';\nimport 'react-toastify/dist/ReactToastify.css'\nimport \"semantic-ui-css/semantic.min.css\"\n\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.dispatch({ type: \"FETCH_USER\" });\n  }\n\n  render() {\n    return (\n      <>\n        <Router>\n          <div>\n\n            {/* <Nav /> */}\n            <Switch>\n              {/* Visiting localhost:3000 will redirect to localhost:3000/home */}\n              <Redirect exact from=\"/\" to=\"/home\" />\n\n              {/* Visiting localhost:3000/about will show the about page. */}\n              <Route\n                // shows AboutPage at all times (logged in or not)\n                exact\n                path=\"/about\"\n                component={AboutPage}\n              />\n\n              {/* For protected routes, the view could show one of several things on the same route.\n            Visiting localhost:3000/user will show the UserPage if the user is logged in.\n            If the user is not logged in, the ProtectedRoute will show the LoginPage (component).\n            Even though it seems like they are different pages, the user is always on localhost:3000/user */}\n              <ProtectedRoute\n                // logged in shows UserPage else shows LoginPage\n                exact\n                path=\"/home\"\n                component={NewMessage}\n              />\n\n              <ProtectedRoute\n                // logged in shows New Template Page else shows LoginPage\n                exact\n                path=\"/newtemplate\"\n                component={NewTemplate}\n              />\n\n              {/* <ProtectedRoute\n                // logged in shows Template List else shows LoginPage\n                exact\n                path=\"/newmessage\"\n                component={NewMessage}\n              /> */}\n\n              <ProtectedRoute\n                // logged in shows InfoPage else shows LoginPage\n                exact\n                path=\"/newguest\"\n                component={NewGuest}\n              />\n              <ProtectedRoute\n                // logged in shows InfoPage else shows LoginPage\n                exact\n                path=\"/newhotel\"\n                component={NewHotel}\n              />\n\n              {/* When a value is supplied for the authRedirect prop the user will\n            be redirected to the path supplied when logged in, otherwise they will\n            be taken to the component and path supplied. */}\n              <ProtectedRoute\n                // with authRedirect:\n                // - if logged in, redirects to \"/user\"\n                // - else shows LoginPage at /login\n                exact\n                path=\"/login\"\n                component={LoginPage}\n                authRedirect=\"/home\"\n              />\n              <ProtectedRoute\n                // with authRedirect:\n                // - if logged in, redirects to \"/user\"\n                // - else shows RegisterPage at \"/registration\"\n                exact\n                path=\"/registration\"\n                component={RegisterPage}\n                authRedirect=\"/home\"\n              />\n              <ProtectedRoute\n                // with authRedirect:\n                // - if logged in, redirects to \"/user\"\n                // - else shows LandingPage at \"/home\"\n                exact\n                path=\"/home\"\n                component={NewMessage}\n                authRedirect=\"/user\"\n              />\n\n              {/* If none of the other routes matched, we will show a 404. */}\n              <Route render={() => <h1>404</h1>} />\n            </Switch>\n            {/* <GetGreeting /> */}\n            \n          </div>\n        </Router>\n        <div></div>\n      </>\n    );\n  }\n}\n\nexport default connect()(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport logger from \"redux-logger\";\n\nimport rootReducer from \"./redux/reducers/_root.reducer\";\nimport rootSaga from \"./redux/sagas/_root.saga\";\n\nimport App from \"./components/App/App\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewareList =\n  process.env.NODE_ENV === \"development\"\n    ? [sagaMiddleware, logger]\n    : [sagaMiddleware];\n\nconst store = createStore(\n  rootReducer,\n\n  applyMiddleware(...middlewareList)\n);\n\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"react-root\")\n);\n"],"sourceRoot":""}